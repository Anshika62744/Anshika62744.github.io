name: Deploy Academic Portfolio to GitHub Pages

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Setup Pages
        uses: actions/configure-pages@v3
        
      - name: Validate HTML
        run: |
          # Install HTML validator
          sudo apt-get update
          sudo apt-get install -y tidy
          
          # Validate main HTML file
          echo "Validating HTML files..."
          find . -name "*.html" -exec echo "Checking {}" \; -exec tidy -q -e {} \; || true
          
      - name: Check CSS
        run: |
          # Basic CSS syntax check
          echo "Checking CSS syntax..."
          find . -name "*.css" -exec echo "Checking {}" \; -exec cat {} \; > /dev/null
          
      - name: Check JavaScript
        run: |
          # Install Node.js for JS validation
          curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
          sudo apt-get install -y nodejs
          
          # Basic JS syntax check
          echo "Checking JavaScript syntax..."
          find . -name "*.js" -exec echo "Checking {}" \; -exec node -c {} \;
          
      - name: Optimize images (if any)
        run: |
          echo "Checking for images to optimize..."
          find ./images -type f \( -name "*.jpg" -o -name "*.jpeg" -o -name "*.png" \) 2>/dev/null || echo "No images found"
          
      - name: Generate build info
        run: |
          echo "Build completed at: $(date)" > build-info.txt
          echo "Git commit: ${{ github.sha }}" >> build-info.txt
          echo "Branch: ${{ github.ref_name }}" >> build-info.txt
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: .

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
